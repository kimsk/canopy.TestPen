@{
    //todo maybe do some of this work in some funcs that I put into the viewbag?
    Layout = null;
    dynamic scenario = null;
    var inputs = new List<dynamic>();
    var expecteds = new List<dynamic>();
    var attributes = new List<dynamic>();
    var steps = new List<dynamic>();
    string pass = "";
    string fail = "";
    string skip = "";
    //cant think of a better way to do this, linq isnt working for me
    foreach (var s in ViewBag.Scenarios)
    {
        if (s.Id == Model)
        {
            scenario = s;
            if (s.TestStatus == "Pass")
            {
                pass = "btn-success active";
            }
            if (s.TestStatus == "Fail")
            {
                fail = "btn-danger active";
            }
            if (s.TestStatus == "Skip")
            {
                skip = "btn-warning active";
            }

            foreach (var i in ViewBag.Inputs)
            {
                if (i.ScenarioId == scenario.Id)
                {
                    inputs.Add(i);
                }
            }

            foreach (var e in ViewBag.Expecteds)
            {
                if (e.ScenarioId == scenario.Id)
                {
                    expecteds.Add(e);
                }
            }

            foreach (var a in ViewBag.Attributes)
            {
                if (a.ScenarioId == scenario.Id)
                {
                    attributes.Add(a);
                }
            }

            foreach (var step in ViewBag.Steps)
            {
                if (step.ScenarioId == scenario.Id)
                {
                    steps.Add(step);
                }
            }
        }
    }
}

<tr data-scenarioid="@scenario.Id" class="master">
    <td class="status">
        <button data-status="Pass" type="button" class="status-btn btn btn-xs @pass"><i class="icon-ok"></i></button>
        <button data-status="Fail" type="button" class="scenario-fail status-btn btn btn-xs @fail"><i class="icon-remove"></i></button>
        <button data-status="Skip" type="button" class="status-btn btn btn-xs @skip"><i class="icon-asterisk"></i></button>
    </td>

    <td class="description">@scenario.Description
    </td>
    <td class="caseId">@scenario.CaseId
    </td>
    <td class="config">@scenario.Configuration
    </td>
    <td class="criticality">@scenario.Criticality
    </td>
</tr>
<tr style="display: none;" data-scenarioid="@scenario.Id" class="details">
    <td class="" colspan="5">
        <form class="form-horizontal" role="form">
            <div class="row">
                <div class="col-md-6">
                    <div class="form-group">
                        <label for="input" class="col-sm-2 control-label">Input</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" rows="@(inputs.Count + 1)">@(String.Join("\r\n", inputs.Select(x => x.Input).ToArray()))
                            </textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="expected" class="col-sm-2 control-label">Steps</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" rows="@(steps.Count + 1)">@(String.Join("\r\n", steps.Select(x => x.Value).ToArray()))
                            </textarea>
                        </div>
                    </div>
                    <div class="form-group">
                        <label for="expected" class="col-sm-2 control-label">Expected</label>
                        <div class="col-sm-10">
                            <textarea class="form-control" rows="@(expecteds.Count + 1)">@(String.Join("\r\n", expecteds.Select(x => x.Expected).ToArray()))
                            </textarea>
                        </div>
                    </div>
                </div>

                <div class="col-md-6">
                    <div class="form-group">
                        <label for="testType" class="col-sm-2 control-label">Test Type</label>
                        <div class="col-sm-10">
                            <input class="form-control" value="@scenario.TestType">
                        </div>
                    </div>
                    @foreach (var attribute in attributes)
                    {
                        <div class="form-group">
                            <label for="workflow" class="col-sm-2 control-label">@attribute.Name</label>
                            <div class="col-sm-10">
                                <input class="form-control" value="@attribute.Value">
                            </div>
                        </div>
                    }
                    <div class="form-group comment-group">
                        
                        <label for="description" class="col-sm-2 control-label">
                            <span class="hidden save-button">
                                <button type="button" class="btn btn-xs btn-warning">
                                    <span class="glyphicon glyphicon-floppy-disk"></span>
                                </button>
                            </span>
                            Comment
                        </label>
                        <div class="col-sm-10">
                            <textarea class="form-control comment" rows="2">@(scenario.Comment == null ? "" : @scenario.Comment.Value)</textarea>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </td>
</tr>
